<?php
/**
 * @file 
 *
 */

module_load_include('inc', 'd2d_server', 'includes/db');
module_load_include('inc', 'd2d_server', 'includes/search');
module_load_include('inc', 'd2d_server', 'includes/theme');

/**
 * Implements hook_entity_info().
 */
function d2d_server_entity_info() {
  $return['d2d_entity'] = array(
    'label' => t('D2D Server'),
    'base table' => 'd2d_entity',
    'entity keys' => array(
      'id' => 'did',
      'label' => 'title',
    ),
    'entity class' => 'D2DEntity',
    'uri callback' => 'entity_class_uri',
    'controller class' => 'D2DEntityController',
    'admin ui' => array(
      'path' => 'admin/d2d_server',
      'controller class' => 'D2DEntityUIController',
      'file' => 'includes/d2d_entity.admin.inc',
    ),
    'module' => 'd2d_server',
    'access callback' => 'd2d_server_admin_access',
    'fieldable' => TRUE,
    'bundles' => array(
      'd2d_entity' => array(
        'label' => t('d2d entity bundle'),
        'admin' => array(
          'path' => 'admin/d2d_server',
          'access arguments' => array('administer d2d server'),
        ),
      ),
    ),
  );

  return $return;
}

/**
 * accesss callback function for hook_entity_info().
 */
function d2d_server_admin_access($op, $profile = NULL, $account = NULL) {
  if (user_access('administer d2d server', $account)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_permission().
 */
function d2d_server_permission() {
  return array(
    'administer d2d server' => array(
      'title' => t('Administer Patterns Server'),
    ),
    'view d2d server' => array(
      'title' => t('View Patterns Server list and page'),
    ),
  );
}

/**
 */
function d2d_server_menu() {
  $items = array();

  //main page.
  //use the $property pid of _patterns_server_list().
  $items['d2d_server_homepage'] = array(
    'title' => 'List of all d2d instances',
    'description' => 'the list of all d2d instances',
    'page callback' => '_d2d_server_all_list_page',
    'page arguments' => array(),
    'access arguments' => array('view d2d server'),
  );

  //d2d instance's view page. "d2d/$did"
  //if success, go to d2d/$did page.
  //if not(the $pid is wrong), go to the main page.
  $items['d2d/%'] = array(
    'title' => 'd2d instance view',
    'description' => 'd2d instance view page',
    'page callback' => '_d2d_instance_view_page',
    'page arguments' => array(1),
    'access arguments' => array('view d2d server'),
  );

  $items['d2d/category/%'] = array(
    'title' => 'all d2d instances in % category',
    'description' => 'all d2d instances in % category',
    'page callback' => '_d2d_server_list_basicpage',
    'page arguments' => array(1, 2),
    'access arguments' => array('view d2d server'),
  );

  $items['d2d/tags/%/%'] = array(
    'title' => 'all d2d instances with the tag %',
    'description' => 'all d2d instances with the tag %',
    'page callback' => '_d2d_server_list_basicpage',
    'page arguments' => array(2, 3),
    'access arguments' => array('view d2d server'),
  );

  //this is search function. search text & search type.
  //actually its result is composed by the above four basic kinds of table.
  $items['d2d/search/%/%'] = array(
    'title' => 'search d2d instances',
    'description' => 'search d2d instances with value/category, and so on',
    'page callback' => '_d2d_server_search',
    'page arguments' => array(2, 3),
    'access arguments' => array('view d2d server'),
  );

  return $items;
}

function _d2d_server_all_list_page() {
  //drupal_add_js(drupal_get_path('module', 'd2d_server') . '/styles/js/patterns_server.search.js');
  $searchform = drupal_get_form('d2d_server_search');
  $list = drupal_render($searchform);

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'd2d_entity')
    ->propertyOrderBy('created', 'DESC')
    ->execute();

  $list .= "<div id='d2d-server-all-table-wrap'>";
  $vscore = array();
  if (isset($query->ordered_results) && count($query->ordered_results)) {

    $ordered_results_backup = $query->ordered_results;

    //Most Recent Patterns.
    $query->ordered_results = array_slice($ordered_results_backup, 0, 10, TRUE);
    $fieldset_title = 'Most Recent Patterns:';
    $list .= _d2d_server_list_page($query, $fieldset_title);

    //Most Liked Patterns.
    /*
    foreach ($ordered_results_backup as $key => $value) {
      $vscore[$key] = _patterns_server_get_voting_score($value->entity_id);
    }
    arsort($vscore);
    $new_ordered_results = array();
    foreach ($vscore as $key => $value) {
      $new_ordered_results[] = $ordered_results_backup[$key];
    }
    $query->ordered_results = array_slice($new_ordered_results, 0, 10, TRUE);
    $fieldset_title = 'Most Liked Patterns:';
    $list .= _patterns_server_list_page($query, $fieldset_title);
    */
  }
  else {
    //drupal_add_js(drupal_get_path('module', 'patterns_server') . '/styles/js/patterns_server.firstpage.js');
    $list .= "<div class='d2d-server-list-table-wrap'>";
    $list .= "There is no d2d instances in database.</br>Go to check whether there are some friends:";
    //$list .= _patterns_server_upload_button();
    //$list .= " ?";
    //$list .= '<div id="d2d-server-upload-form-js" class="hero-unit"></div>';
    $list .= '</div>';
  }

  $list .= '</div>';
  return $list;
}

function _d2d_instance_view_page($did) {
  $de = entity_object_load($did, 'd2d_entity');
  if (!$de) {
    drupal_set_message(t("The d2d instance doesn't exist.", "error"));
    drupal_goto('d2d_server_homepage');
  }
  drupal_set_title($de->title);
  $fieldset_title = $de->title;

  //drupal_add_css(drupal_get_path('module', 'patterns_server') . '/styles/css/patterns_server.viewpage.css');
  //drupal_add_js(drupal_get_path('module', 'patterns_server') . '/styles/js/patterns_server.viewpage.js');

  //$backtoserver_voting_link = _patterns_server_back_like_button($pid);
  $content = "<div id='one_d2d_instance'><fieldset><legend>$fieldset_title</legend><div class='fieldset-wrapper'>";
  //$content = "<div id='one_pattern_div'><fieldset><legend>$fieldset_title$backtoserver_voting_link</legend><div class='fieldset-wrapper'>";

  $content .= _d2d_instance_view_page_description($de);

  $content .= '</div></fieldset></div>';
  $field_view = entity_view('d2d_entity', array($did => $de));
  $content .= drupal_render($field_view);

  return $content;

}


function _d2d_server_list_basicpage($property, $arg) {
  drupal_set_title($property . ': ' . $arg);

  //drupal_add_js(drupal_get_path('module', 'patterns_server') . '/styles/js/patterns_server.search.js');
  $searchform = drupal_get_form('d2d_server_search');
  $searchform = drupal_render($searchform);

  $list = _d2d_server_list($property, $arg);
  if ($list === FALSE) {
    drupal_set_message(t("The d2d instances list doesn't exist."), "error");
    drupal_goto('d2d_server_homepage');
  }
  else {
    return $searchform . "<div id='d2d-server-all-table-wrap'>" . $list . "</div>";
  }

}

/**
 * this function return a html table.
 * style: <div class='d2d-server-list-table-wrap'>a table</div>
 * this is core function.
 * if it get a list table, it return the table. if not, it return FALSE.
 * it can handle menus:
 *    d2d/tags/$field_tags_name/$tid ====> $property: field_tags_name, $arg: $tid.
 *    d2d/category/[System] ====> $property: category, $arg: [System].
 * if can hanndle another pid $property and $pid $arg.
 * all five kinds of property: four menus and the special pid $property.
 *
 * these two are the basic table, a page can contain several tables. that
 * means this function can be called any times. the output is a <div>table</div>.
 *
 */
function _d2d_server_list($property, $arg, $operate = '=', $showupload = TRUE) {

  $pos = strpos($property, 'field');
  $property_sign = $property;
  if ($pos !== FALSE) {
    $property_sign = 'tag';
  }

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'd2d_entity');

  switch ($property_sign) {
    case 'tag':
      $tax = taxonomy_term_load($arg);
      $fieldset_title = "tag: " . $tax->name . " in $property field";
      $query->fieldCondition($property, 'tid', $arg, '=');
      break;

    default:
      $fieldset_title = $property . ': ' . $arg;
      $query->propertyCondition($property, $arg, $operate);
  }

  $query->propertyOrderBy('created', 'DESC')
    ->pager(10)
    ->execute();
  if (isset($query->ordered_results) && count($query->ordered_results)) {
    $list = _d2d_server_list_page($query, $fieldset_title);
    return $list;
  }
  else {
    return FALSE;
  }
}
